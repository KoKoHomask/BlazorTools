@page "/floatconversion"
<h3>浮点转换</h3>
<label class="group-text">浮点数:</label>
<div class="input-group mb-3">    
    <input @bind-value="@ip_float" type="text" class="form-control" placeholder="请输入浮点数">
    <button type="button" class="btn btn-primary" onclick="@btn_ConvertToArray">转换</button>
</div>
<label class="group-text">浮点数组(小端模式):</label>
<div class="input-group mb-3">
    <input @bind-value="@ip_barray" type="text" class="form-control" placeholder="请输入浮点数对应的数组">
    <button type="button" class="btn btn-primary" onclick="@btn_ConvertToFloat">转换</button>
</div>
@code {

    string ip_float{ get; set; }
    string ip_barray { get; set; }

    void btn_ConvertToArray(EventArgs e)
    {
        ip_barray = "";
        if (float.TryParse(ip_float, out float val))
        {
            var bArray = BitConverter.GetBytes(val);
            foreach (var b in bArray)
            {
                ip_barray += b.ToString("X2") + " ";
            }
        }
        else
            ip_barray = "input err";
        StateHasChanged();
    }
    void btn_ConvertToFloat(EventArgs e)
    {
        ip_float = "input err";
        var bArray = ip_barray.Split(' ');
        List<byte> bLst = new List<byte>();
        foreach(var b in bArray)
        {
            try { var tmp = Convert.ToByte(b, 16);
                bLst.Add(tmp);
            }
            catch { }
        }
        if(bLst.Count>=4)
        {
            try { ip_float = BitConverter.ToSingle(bLst.ToArray()).ToString(); }
            catch { }
        }
        StateHasChanged();

    }
}
